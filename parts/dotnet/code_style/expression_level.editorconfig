## .NET code style (expression level) preferences
[*.cs]

### Simplify name (IDE0001)
dotnet_diagnostic.IDE0001.severity = suggestion

### Simplify member access (IDE0002)
dotnet_diagnostic.IDE0002.severity = warning

### Remove unnecessary cast (IDE0004)
dotnet_diagnostic.IDE0004.severity = warning

### Add missing cases to switch statement (IDE0010)
dotnet_diagnostic.IDE0010.severity = warning

### Use object initializers (IDE0017)
dotnet_style_object_initializer = true
dotnet_style_object_initializer.severity = suggestion

### Use collection initializers or expressions (IDE0028)
dotnet_style_collection_initializer = true
dotnet_style_collection_initializer.severity = warning

dotnet_style_prefer_collection_expression = when_types_exactly_match
dotnet_style_prefer_collection_expression.severity = warning

### Null check can be simplified (IDE0029, IDE0030, and IDE0270)
dotnet_style_coalesce_expression = true
dotnet_style_coalesce_expression.severity = suggestion

### Use null propagation (IDE0031)
dotnet_style_null_propagation = true
dotnet_style_null_propagation.severity = warning

### Use auto-implemented property (IDE0032)
dotnet_style_prefer_auto_properties = true
dotnet_style_prefer_auto_properties.severity = warning

### Use explicitly provided tuple name (IDE0033)
dotnet_style_explicit_tuple_names = true
dotnet_style_explicit_tuple_names.severity = warning

### Remove unreachable code (IDE0035)
dotnet_diagnostic.IDE0035.severity = warning

### Use inferred member names (IDE0037)
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_inferred_tuple_names.severity = suggestion

dotnet_style_prefer_inferred_anonymous_type_member_names = true
dotnet_style_prefer_inferred_anonymous_type_member_names.severity = suggestion

### Use 'is null' check (IDE0041)
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
dotnet_style_prefer_is_null_check_over_reference_equality_method.severity = warning

### Use conditional expression for assignment (IDE0045)
dotnet_style_prefer_conditional_expression_over_assignment = true
dotnet_style_prefer_conditional_expression_over_assignment.severity = suggestion

### Use conditional expression for return (IDE0046)
dotnet_style_prefer_conditional_expression_over_return = true
dotnet_style_prefer_conditional_expression_over_return.severity = suggestion

### Convert anonymous type to tuple (IDE0050)
dotnet_diagnostic.IDE0050.severity = warning

### Remove unused private member (IDE0051)
dotnet_diagnostic.IDE0051.severity = suggestion

### Remove unread private member (IDE0052)
dotnet_diagnostic.IDE0052.severity = suggestion

### Use compound assignment (IDE0054 and IDE0074)
dotnet_style_prefer_compound_assignment = true
dotnet_style_prefer_compound_assignment.severity = warning

### Remove unnecessary expression value (IDE0058)
csharp_style_unused_value_expression_statement_preference = discard_variable
csharp_style_unused_value_expression_statement_preference.severity = warning

### Remove unnecessary value assignment (IDE0059)
csharp_style_unused_value_assignment_preference = discard_variable
csharp_style_unused_value_assignment_preference.severity = warning

### Use 'System.HashCode.Combine' (IDE0070)
dotnet_diagnostic.IDE0070.severity = warning

### Simplify interpolation (IDE0071)
dotnet_style_prefer_simplified_interpolation = true
dotnet_style_prefer_simplified_interpolation.severity = warning

### Simplify conditional expression (IDE0075)
dotnet_style_prefer_simplified_boolean_expressions = true
dotnet_style_prefer_simplified_boolean_expressions.severity = warning

### Convert typeof to nameof (IDE0082)
dotnet_diagnostic.IDE0082.severity = warning

### Remove unnecessary equality operator (IDE0100)
dotnet_diagnostic.IDE0100.severity = none

### Simplify LINQ expression (IDE0120)
dotnet_diagnostic.IDE0120.severity = warning

### Simplify LINQ type check and cast (IDE0121)
dotnet_diagnostic.IDE0121.severity = warning

### Namespace does not match folder structure (IDE0130)
dotnet_style_namespace_match_folder = true
dotnet_style_namespace_match_folder.severity = suggestion

### Use throw expression (IDE0016)
csharp_style_throw_expression = false
csharp_style_throw_expression.severity = silent

### Inline variable declaration (IDE0018)
csharp_style_inlined_variable_declaration = true
csharp_style_inlined_variable_declaration.severity = warning

### Simplify 'default' expression (IDE0034)
csharp_prefer_simple_default_expression = true
csharp_prefer_simple_default_expression.severity = warning

### Use local function instead of lambda (IDE0039)
csharp_style_prefer_local_over_anonymous_function = true
csharp_style_prefer_local_over_anonymous_function.severity = suggestion

### Deconstruct variable declaration (IDE0042)
csharp_style_deconstructed_variable_declaration = true
csharp_style_deconstructed_variable_declaration.severity = silent

### Use index operator (IDE0056)
csharp_style_prefer_index_operator = true
csharp_style_prefer_index_operator.severity = warning

### Use range operator (IDE0057)
csharp_style_prefer_range_operator = true
csharp_style_prefer_range_operator.severity = warning

### Add missing cases to switch expression (IDE0072)
dotnet_diagnostic.IDE0072.severity = suggestion

### Remove unnecessary suppression operator (IDE0080)
dotnet_diagnostic.IDE0080.severity = warning

### Simplify new expression (IDE0090)
csharp_style_implicit_object_creation_when_type_is_apparent = true
csharp_style_implicit_object_creation_when_type_is_apparent.severity = warning

### Remove unnecessary discard (IDE0110)
dotnet_diagnostic.IDE0110.severity = warning

### Prefer 'null' check over type check (IDE0150)
csharp_style_prefer_null_check_over_type_check = true
csharp_style_prefer_null_check_over_type_check.severity = warning

### Use tuple to swap values (IDE0180)
csharp_style_prefer_tuple_swap = true
csharp_style_prefer_tuple_swap.severity = suggestion

### Add explicit cast in foreach loop (IDE0220)
dotnet_style_prefer_foreach_explicit_cast_in_source = always
dotnet_style_prefer_foreach_explicit_cast_in_source.severity = warning

### Use UTF-8 string literal (IDE0230)
csharp_style_prefer_utf8_string_literals = true
csharp_style_prefer_utf8_string_literals.severity = suggestion

### Nullable directive is redundant (IDE0240)
dotnet_diagnostic.IDE0240.severity = suggestion

### Nullable directive is unnecessary (IDE0241)
dotnet_diagnostic.IDE0241.severity = silent

### Use collection expression for array (IDE0300)
dotnet_style_prefer_collection_expression = when_types_exactly_match
dotnet_style_prefer_collection_expression.severity = warning

### Use collection expression for empty (IDE0301)
dotnet_style_prefer_collection_expression = when_types_exactly_match
dotnet_style_prefer_collection_expression.severity = warning

### Use collection expression for fluent (IDE0305)
dotnet_diagnostic.IDE0305.severity = none

### Use unbound generic type (IDE0340)
csharp_style_prefer_unbound_generic_type_in_nameof = true
csharp_style_prefer_unbound_generic_type_in_nameof.severity = warning

### Use implicitly typed lambda (IDE0350)
csharp_style_prefer_implicitly_typed_lambda_expression = true
csharp_style_prefer_implicitly_typed_lambda_expression.severity = warning